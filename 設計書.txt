### ブックマークマネージャ (v2) 基本設計概要

__1. アプリケーションコンセプト:__ * ユーザーが複数のカテゴリ（カラム）別にブックマークやフォルダを階層的に管理できる、クライアントサイド完結型のブックマークマネージャー。

__2. 主要UI構成:__ * __上部:__ * お気に入りバー: 全カラムから選択されたお気に入りブックマークをコンパクトに表示（アイコン+タイトル）。ドラッグ＆ドロップで並び替え可能。 * バックアップボタン群: JSON形式でのデータ保存・読み込み。 * __メインエリア:__ * カラムコンテナ: 複数のカラムを横並びに表示（必要に応じて横スクロール）。 * 各カラム: 独立したツリービュー形式のブックマーク/フォルダ一覧。カラム自体に表示タイトルはなし。 * カラムの並び替え: ドラッグ＆ドロップで可能。 * カラム追加ボタン: カラムコンテナの右端に配置。 * __インタラクション:__ * 右クリックメニュー: カラム、ブックマーク、フォルダ、ツリーの空きスペースなど、対象に応じた操作メニュー（編集、削除、新規作成など）を表示。 * モーダルウィンドウ (`Micromodal.js`利用): アイテム（ブックマーク/フォルダ）の新規作成および編集用。

__3. 主要機能:__ * __カラム管理:__ * 追加、削除（中身ごと、確認あり）、並び替え。 * __ブックマーク/フォルダ管理 (各カラム内):__ * 階層構造（深さ制限なし）。 * 追加、編集、削除。 * ツリー内でのドラッグ＆ドロップによる並び替え、フォルダ間の移動、カラム間の移動 (`SortableJS`利用)。 * フォルダの展開/折りたたみ（▶/▼アイコン、階層を示す縦線）。 * __アイテム属性:__ * ブックマーク: タイトル、URL、お気に入り状態、カスタムアイコン (`Font Awesome`プリセットから選択、未設定時はファビコン自動取得試行)。 * フォルダ: タイトル、背景色（カラーピッカー `Vanilla Picker`利用）。 * __お気に入り機能:__ * ブックマークをお気に入りバーに登録/解除。 * お気に入りバー上での並び替え、右クリックでの解除。 * __データ永続化:__ * `localStorage` への自動保存・読み込み。 * 手動でのJSONファイルエクスポート/インポート。

__4. データ構造 (localStorage):__ `json { "appSettings": {}, // 将来的なグローバル設定用 "columns": [ { "id": "column-uuid", // カラムのユニークID "createdAt": "...", "updatedAt": "...", "items": [ // カラム内のアイテム（ブックマーク/フォルダ）の配列（階層構造） { "id": "item-uuid", // アイテムのユニークID "type": "bookmark", // "bookmark" または "folder" "title": "アイテム名", "url": "https://example.com", // typeがbookmarkの場合 "isFavorite": false, // typeがbookmarkの場合 "icon": "fas fa-star", // typeがbookmarkの場合 (Font Awesomeクラス) "color": "#RRGGBB", // typeがfolderの場合 (16進数カラーコード) "createdAt": "...", "updatedAt": "...", "children": [] // typeがfolderの場合、子アイテムの配列 } ] } ], "columnOrder": ["column-uuid-1", /* 他のカラムID */], // カラムの表示順 "favoritesOrder": ["item-uuid-fav-1", /* 他のお気に入りブックマークID */] // お気に入りバーの表示順 }`

__5. 技術スタック:__ * HTML, CSS, JavaScript (Vanilla JS) * 外部ライブラリ: * `SortableJS` (ドラッグ＆ドロップ) * `Vanilla Picker` (カラーピッカー) * `Micromodal.js` (モーダルウィンドウ) * `Font Awesome` (アイコン)

---

### ブックマークマネージャ (v2) 開発計画案 (ライブラリ導入版)

__1. プロジェクト初期設定__ * `bookmark_manager_v2` フォルダ作成。 * `index.html`, `style.css`, `script.js` の基本ファイル作成。 * 外部ライブラリの導入設定 (`index.html`にCDNリンク等を追加): * Font Awesome * SortableJS * Vanilla Picker * Micromodal.js

__2. HTML骨格作成 (`index.html`)__ * (前回の計画案と同様の構造) * モーダルウィンドウの基本構造を `Micromodal.js` の仕様に合わせて調整。

__3. CSSスタイリング (`style.css`)__ * (前回の計画案と同様のスタイリング項目) * `Vanilla Picker` や `Micromodal.js` のデフォルトスタイルとの調和、必要に応じたカスタマイズ。 * `SortableJS` のドラッグ中クラスなどを利用した視覚的フィードバックの強化。

__4. JavaScript基本機能 (`script.js`)__ * (前回の計画案と同様のモジュール構成と基本関数) * ライブラリ初期化処理の追加: * `Micromodal.init()` * カラーピッカー (`Vanilla Picker`) のインスタンス生成ロジック。

__5. JavaScript主要機能実装 (`script.js`)__ * __カラム操作__: * カラム並び替え: `SortableJS` をカラムコンテナに適用。 * __ブックマーク・フォルダ操作 (モーダル経由)__: * モーダル表示/非表示: `Micromodal.show('modal-id')`, `Micromodal.close('modal-id')` を使用。 * フォルダ色編集: モーダル内で `Vanilla Picker` を使用。 * __ドラッグ＆ドロップ機能 (`SortableJS`利用)__: * カラム内アイテム: 並び替え、フォルダへの移動。 * カラム間アイテム: アイテムの移動。 * お気に入りバー内: アイテム並び替え。 * `SortableJS` のイベント (`onEnd`など) を利用してデータ構造 (`columns`, `columnOrder`, `favoritesOrder`) を更新。 * (その他の機能は前回の計画案と同様)